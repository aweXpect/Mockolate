namespace Mockolate.SourceGenerators.Tests;

public class Test
{
	[Fact]
	public async Task AllGeneratedSourcesShouldContainAutoGeneratedTag()
	{
		GeneratorResult result = Generator
			.Run("""
			     namespace MyCode
			     {
			         public class Program
			         {
			             public static void Main(string[] args)
			             {
			     			var x = Mockolate.Mock.For<string>();
			             }
			         }
			     }
			     """);

		await That(result.Diagnostics).IsEmpty();

		await That(result.Sources)!.All().AreEquivalentTo(new
		{
			Source = It.Is<string>().That.Contains("<auto-generated>").And.Contains("</auto-generated>"),
		});
	}
	[Fact]
	public async Task XXX()
	{
		GeneratorResult result = Generator
			.Run("""
			     using System.Collections.Generic;

			     namespace MyCode
			     {
			         public class Program
			         {
			             public static void Main(string[] args)
			             {
			     			var x = Mockolate.Mock.For<IList<int>>();
			             }
			         }
			     }
			     """);

		await That(result.Diagnostics).IsEmpty();

		await That(result.Sources)!.All().AreEquivalentTo(new
		{
			Source = It.Is<string>().That.Contains("<auto-generated>").And.Contains("</auto-generated>"),
		});
	}
}
